apply plugin: 'com.android.library'

def buildType = "debug"
def androidABI = System.getenv('TARGET')

android {
    signingConfigs {
        release {
            storeFile file('../key.jks')
            storePassword 'samsung'
            keyAlias = 'key0'
            keyPassword 'samsung'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                cppFlags "-fexceptions -frtti -w -Wall -std=gnu++11"
                arguments '-DANDROID_STL=c++_shared'
            }
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    aaptOptions {
        noCompress ''
    }
    buildTypes {
        debug {
            ndk {
                abiFilters androidABI
            }
            buildType = "debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters androidABI
            }
            buildType = "release"
        }
    }
    packagingOptions {
        if( androidABI == "arm64-v8a" )
        {
          pickFirst 'lib/arm64-v8a/libc++_shared.so'
          pickFirst 'lib/arm64-v8a/libdaliview.so'
        }
        else
        {
          pickFirst 'lib/armeabi-v7a/libc++_shared.so'
          pickFirst 'lib/armeabi-v7a/libdaliview.so'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs += '../../dali-env/android/lib'
            assets.srcDirs += '../../dali-env/android/files'
        }
    }
    externalNativeBuild {
        cmake {
            version '3.10.2'
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    compileOptions {
        targetCompatibility = 1.6
        sourceCompatibility = 1.6
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task buildDaliDependencies(type:Exec) {
    def daliDir = file('../../dali-env/android').getAbsolutePath()
    environment "PREFIX", daliDir
    environment "ANDROID_ABI", androidABI
    environment "ANDROID_PLATFORM", "26"
    if (buildType == 'debug')
        environment "DEBUG", "1"
    workingDir "../../android-dependencies/cmake"
    commandLine 'sh',  './buildall.sh'
}

task buildDali(type:Exec) {
    workingDir "../dali"
    if (buildType == 'debug')
        environment "DEBUG", "1"
    commandLine 'sh', './build.sh'
}

task cleanDaliEnv(type:Delete) {
    def daliDir = file('../../dali-env/android').getAbsolutePath()
    delete daliDir
}

task cleanDaliDependencies(type:Exec) {
    workingDir "../../android-dependencies/cmake"
    commandLine 'sh',  './buildall.sh', 'clean'
}

task cleanDali(type:Exec) {
    workingDir "../dali"
    commandLine 'sh', './build.sh', 'clean'
}

buildDali.dependsOn buildDaliDependencies
preBuild.dependsOn buildDali

cleanDaliDependencies.dependsOn cleanDaliEnv
cleanDali.dependsOn cleanDaliDependencies
clean.dependsOn cleanDali
